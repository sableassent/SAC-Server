version: '2.1'

networks:
  main:

services:
  minio:
    image: minio/minio
    container_name: minio
    volumes:
      - /opt/minio:/data
    ports:
      - "9001:9000"
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - main

  mongo:
    image: mongo
    container_name: mongo
    volumes:
      - /opt/mongo:/data/db
    ports:
      - 27000:27017
    restart: always
    networks:
      - main

  api:
    build: api
    container_name: api
    depends_on:
      - mongo
      - minio
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_DATABASE=sablecoin
      - MYSQL_USERNAME=root
      - MYSQL_PASSWORD=itsecure
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - PASSWORD_SALT=k4Ms9fM2
      - CHAIN=${CHAIN}
      - HARDFORK=${HARDFORK}
      - SAC1_ADDRESS=${SAC1_ADDRESS}
      - INFURA_API_ENDPOINT=${INFURA_API_ENDPOINT}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - TWILIO_ACCOUNTSID=${TWILIO_ACCOUNTSID}
      - TWILIO_AUTHTOKEN=${TWILIO_AUTHTOKEN}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    command: sh -c "node app.js"
    restart: always
    ports:
     - 3000:80
    networks:
      - main

  controller:
    build:
      context: controller
      args:
        - REACT_APP_BASE_URL=${REACT_APP_BASE_URL}
    container_name: controller
    depends_on:
      - api
    command: nginx
    restart: always
    ports:
     - 3001:80
    networks:
      - main
